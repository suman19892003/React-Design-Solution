//Filter Array
var itemColl=list.filter(value => value.form == "Legacy Systems");//It will return array
var itemIndex=list.filter(value => value.form == "Legacy Systems")[0];//Return Item Index

//Filter Array conditional load Component
let formToLoad =['Item1','Item2','Item3']
{formList.includes("Item1") && (<Item1Component/>)}
{formList.includes("Item2") && (<Item2Component/>)}

//Filter Unique value in array
this.setState({AllItemsToDisplayUnique: this.state.AllItemsToDisplay.filter((val,id,array) => array.indexOf(val) == id)},()=>{
   console.log(this.state.AllItemsToDisplayUnique)
})

//Filter Unique Values in Array 2nd approach
var images = [{"id": 1,"tag": "people"}, {"id": 2,"tag": "places"}, {"id": 3,"tag": "places"}]
const uniqueTags = [];
  res.map(img => {
  if (uniqueTags.indexOf(img.tag) === -1) {
     uniqueTags.push(img.tag)
  }
  });

//Filter Unique Value between two array
let allUser=this.state.allUserTypedColl;
let allListItem:any=this.state.allListItems;
var filteredArray=allUser.filter(item1 => allListItem.find(item2 => item1 === item2))

//Ternary Operators
{this.state.components== 'Item1' ? <Item1Component/> : <Item2Component/>}

//Push item in an array as string
let { AllItemsToDisplay } = this.state;
AllItemsToDisplay.push('Claims System');

//Push item in an array as object multidimensional
let { itemColl } = this.state;
itemColl.push({FileName:item.File.Name,FileURL:item.FileRef,ItemID:item.ID});

Or It can also be defined as below(It will push item to the existing array)
var array = [...this.state.itemColl];
file.map((item)=>{
array.push({FileName:item.File.Name,FileURL:item.FileRef,ItemID:item.ID});       
}) 
this.setState({ itemColl: array });


//Set State in Array
const uniqueTags = [];
uniqueTags.push(img.text)
this.setState({ProductCategoryColl:[...uniqueTags]})

//Copy item from one array to another array
var array = [...this.state.people];

//Remove Item from an array
var array = [...this.state.people]; // make a separate copy of the array
  var index = array.indexOf(e.target.value)
  if (index !== -1) {
    array.splice(index, 1);
    this.setState({people: array});
  }
  
//clear or Empty an array
var ar = [1, 2, 3, 4, 5, 6];
ar.length = 0; // Output []

//Remove a range of elements from an array.
var list = ["bar", "baz", "foo", "qux"];    
list.splice(0, 2); // Starting at index position 0, remove two elements ["bar", "baz"] and retains ["foo", "qux"].

//Check if item exists
if(this.state.AllClaimsSystemDefaultItem.indexOf(item) > -1){
let { AllItemsToDisplay } = this.state;
AllItemsToDisplay.push('Claims System ID Request');
}

//Iterate array map
{this.state.AllItemsToDisplayUnique.map((item,index)=>{
  return <li>{item}</li>
  })
}

//Pass parameter to other component in Route link
import { Route, Link, Switch, HashRouter } from 'react-router-dom';
<Route path="/NewPage" render={(props)=>{<NewPage2 details='detail for child comp' {...props}/>}}/>
<Link to='/NewPage'>Next</Link>

//Apply inline CSS to HTML React element
<button style={{color:'black',margin:'auto'}}>Submit</button>

//Confirmation alert box
window.confirm('Are you sure you wish to delete this item?') ? confirmMethod() : CancelMethod()

//Plain Page Redirect
window.location.href='https://myUrl.com'

//Local Storage get and set array value
var names = [];
names[0] = 'Suman';
localStorage.setItem("names", JSON.stringify(names));
var storedNames = JSON.parse(localStorage.getItem("names"));

